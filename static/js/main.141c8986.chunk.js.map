{"version":3,"sources":["logo.svg","components/a.js","components/b.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Ishan","props","onListClick","index","setState","state","classes","this","Grid","xs","lg","md","Paper","className","paper","List","root","items","map","item","ListItem","key","onClick","button","style","backgroundColor","ListItemAvatar","Avatar","src","image","ListItemText","primary","name","display","flexDirection","justifyContent","Button","Component","withStyles","theme","marginTop","marginBottom","marginLeft","marginRight","height","overflowY","onListClick2","console","log","l","A","length","window","alert","B","splice","backgroundImage","paddingTop","paddingBottom","color","fontFamily","container","width","App","Main","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.141c8986.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React, { Component } from \"react\";\nimport {\n  withStyles,\n  Paper,\n  Grid,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Avatar,\n  Button\n} from \"@material-ui/core\";\n\nclass Ishan extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      index: null\n    };\n  }\n\n  onListClick = index => {\n    this.setState({ index: index }, () => {\n      // console.log(this.state.index);\n    });\n  };\n\n  render() {\n    const classes = this.props.classes;\n\n    return (\n      <>\n        <Grid xs={12} lg={5} md={5}>\n          <Paper className={classes.paper}>\n            <List className={classes.root}>\n              {this.props.items.map((item, index) =>\n                index == this.state.index ? (\n                  <ListItem\n                    key={index}\n                    onClick={() => this.onListClick(index)}\n                    button\n                    style={{ backgroundColor: \"grey\" }}\n                  >\n                    <ListItemAvatar>\n                      <Avatar>\n                        <img src={item.image} />\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary={item.name} />\n                  </ListItem>\n                ) : (\n                  <ListItem\n                    key={index}\n                    onClick={() => this.onListClick(index)}\n                    button\n                  >\n                    <ListItemAvatar>\n                      <Avatar>\n                        <img src={item.image} />\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary={item.name} />\n                  </ListItem>\n                )\n              )}\n            </List>\n          </Paper>\n        </Grid>\n        <Grid\n          xs={6}\n          lg={1}\n          md={1}\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\"\n            // marginRight: \"5px\"\n          }}\n        >\n          <Button\n            style={{\n              backgroundColor: \"#1e88e5\"\n              // width: \"100px\"\n            }}\n            onClick={() => this.props.onListClick(this.state.index)}\n          >\n            Invoke\n          </Button>\n        </Grid>\n      </>\n    );\n  }\n}\n\nconst styles = theme => ({\n  paper: {\n    marginTop: \"10vh\",\n    marginBottom: \"10vh\",\n    marginLeft: \"10%\",\n    marginRight: \"10%\",\n    height: \"50vh\",\n    overflowY: \"scroll\"\n  }\n});\nexport default withStyles(styles)(Ishan);\n","import React, { Component } from \"react\";\nimport {\n  withStyles,\n  Paper,\n  Grid,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Avatar,\n  Button\n} from \"@material-ui/core\";\n\nclass Ishan extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      index: null\n    };\n  }\n\n  onListClick2 = index => {\n    this.setState({ index: index }, () => {\n      console.log(this.state.index);\n    });\n  };\n  render() {\n    const classes = this.props.classes;\n\n    return (\n      <>\n        <Grid\n          xs={6}\n          lg={1}\n          md={1}\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\"\n          }}\n        >\n          <Button\n            style={{\n              backgroundColor: \"#1e88e5\"\n            }}\n            onClick={() => this.props.onListClick2(this.state.index)}\n          >\n            Revoke\n          </Button>\n        </Grid>\n\n        <Grid xs={12} lg={5} md={5}>\n          <Paper className={classes.paper}>\n            <List className={classes.root}>\n              {this.props.items.map((item, index) =>\n                index == this.state.index ? (\n                  <ListItem\n                    key={index}\n                    onClick={() => this.onListClick2(index)}\n                    button\n                    style={{ backgroundColor: \"grey\" }}\n                  >\n                    <ListItemAvatar>\n                      <Avatar>\n                        <img src={item.image} />\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary={item.name} />\n                  </ListItem>\n                ) : (\n                  <ListItem\n                    key={index}\n                    onClick={() => this.onListClick2(index)}\n                    button\n                  >\n                    <ListItemAvatar>\n                      <Avatar>\n                        <img src={item.image} />\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary={item.name} />\n                  </ListItem>\n                )\n              )}\n            </List>\n          </Paper>\n        </Grid>\n      </>\n    );\n  }\n}\n\nconst styles = theme => ({\n  paper: {\n    height: \"50vh\",\n    marginTop: \"10vh\",\n    marginBottom: \"10vh\",\n\n    marginLeft: \"10%\",\n    marginRight: \"10%\",\n    overflowY: \"scroll\"\n  }\n});\nexport default withStyles(styles)(Ishan);\n","import React, { Component } from \"react\";\nimport { withStyles, Paper, Grid } from \"@material-ui/core\";\nimport A from \"./a\";\nimport B from \"./b\";\n\nclass Ishan extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      A: [\n        { name: \"ishan\", image: \"https://source.unsplash.com/user/ishan\" },\n        { name: \"piyush\", image: \"https://source.unsplash.com/user/piyush\" },\n        { name: \"raman\", image: \"https://source.unsplash.com/user/erondu\" },\n        { name: \"sonaksh\", image: \"https://source.unsplash.com/user/john\" },\n        { name: \"hritik\", image: \"https://source.unsplash.com/user/tom\" },\n        { name: \"roshan\", image: \"https://source.unsplash.com/user/ishan\" },\n        { name: \"kunal\", image: \"https://source.unsplash.com/user/piyush\" },\n        { name: \"bheji\", image: \"https://source.unsplash.com/user/erondu\" },\n        { name: \"monaksh\", image: \"https://source.unsplash.com/user/john\" },\n        { name: \"tarun\", image: \"https://source.unsplash.com/user/tom\" }\n      ],\n      B: [\n        { name: \"daspa\", image: \"https://source.unsplash.com/user/ishan\" },\n        { name: \"rawat\", image: \"https://source.unsplash.com/user/piyush\" },\n        { name: \"negi\", image: \"https://source.unsplash.com/user/raman\" },\n        { name: \"mayank\", image: \"https://source.unsplash.com/user/john\" },\n        { name: \"phantom\", image: \"https://source.unsplash.com/user/rhino\" }\n      ]\n    };\n  }\n\n  onListClick = index => {\n    let l = index;\n    if (index >= this.state.A.length) {\n      l = 0;\n    }\n    if (this.state.A.length < 1) {\n      window.alert(\"There are no more resources to allocate\");\n      return;\n    }\n    console.log(index);\n    if (l != null) {\n      this.setState(\n        {\n          B: [...this.state.B, this.state.A[l]]\n        },\n        () => {\n          this.state.A.splice(l, 1);\n\n          this.setState({\n            A: this.state.A\n          });\n        }\n      );\n    } else {\n      l = 0;\n      this.setState(\n        {\n          B: [...this.state.B, this.state.A[l]]\n        },\n        () => {\n          this.state.A.splice(l, 1);\n\n          this.setState({\n            A: this.state.A\n          });\n        }\n      );\n    }\n  };\n  onListClick2 = index => {\n    let l = index;\n    if (index >= this.state.B.length) {\n      l = 0;\n    }\n    if (this.state.B.length < 1) {\n      window.alert(\"there are no more resources to un-allocate\");\n      return;\n    }\n    if (l != null) {\n      this.setState(\n        {\n          A: [...this.state.A, this.state.B[l]]\n        },\n        () => {\n          this.state.B.splice(l, 1);\n          this.setState({\n            B: this.state.B\n          });\n        }\n      );\n    } else {\n      l = 0;\n      this.setState(\n        {\n          A: [...this.state.A, this.state.B[l]]\n        },\n        () => {\n          this.state.B.splice(l, 1);\n          this.setState({\n            B: this.state.B\n          });\n        }\n      );\n    }\n  };\n\n  render() {\n    const classes = this.props.classes;\n\n    return (\n      <div\n        style={{\n          backgroundImage: \"linear-gradient(to bottom right, blue, white)\",\n          paddingTop: \"5vh\",\n          paddingBottom: \"2vh\"\n        }}\n      >\n        <h1 style={{ color: \"white\", fontFamily: \"italic\" }}>\n          Resource Allocator\n        </h1>\n        <Paper className={classes.paper}>\n          <Grid container>\n            <Grid xs={12} lg={12} md={12} container>\n              <A items={this.state.A} onListClick={this.onListClick} />\n\n              <B items={this.state.B} onListClick2={this.onListClick2} />\n            </Grid>\n          </Grid>\n        </Paper>\n      </div>\n    );\n  }\n}\n\nconst styles = theme => ({\n  paper: {\n    height: \"70%\",\n    width: \"90%\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    marginTop: \"15vh\"\n  }\n});\nexport default withStyles(styles)(Ishan);\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Main from \"./components/Main\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}